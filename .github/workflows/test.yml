# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
    pull_request:
        paths-ignore:
            - 'CHANGELOG.md'
            - 'README.md'
    push:
        branches:
            - main
        paths-ignore:
            - 'CHANGELOG.md'
            - 'README.md'

env:
    LC_APPLICATION_ID: terraform-provider-sonatyperepo

# Testing only needs permissions to read the repository contents.
permissions:
    contents: read

jobs:
    # Ensure project builds before running testing matrix
    build:
        name: Build
        runs-on: ubuntu-latest
        timeout-minutes: 5
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-go@v5
              with:
                  go-version-file: 'go.mod'
                  cache: true
            - run: go mod download
            - run: go build -v .
            - name: Run linters
              uses: golangci/golangci-lint-action@v8
              with:
                  version: latest
            
    sonatype:
        name: Sonatype Scan
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              
            - uses: actions/setup-go@v5
              with:
                go-version-file: 'go.mod'
                cache: true
              
            - name: Generate go.list
              run:
                    go list -f '{{define "M"}}{{.Path}} {{.Version}}{{end}}{{with .Module}}{{if not .Main}}{{if .Replace}}{{template "M" .Replace}}{{else}}{{template "M" .}}{{end}}{{end}}{{end}}' -compiled -deps| sort -u > go.list
              
            - name: Sonatype Lifecycle Evaluation
              id: evaluate
              uses: sonatype/actions/evaluate@v1
              with:
                    iq-server-url: ${{ vars.SONATYPE_PLATFORM_URL }}
                    username: ${{ secrets.SONATYPE_LIFECYCLE_USERNAME }}
                    password: ${{ secrets.SONATYPE_LIFECYCLE_PASSWORD }}
                    application-id: ${{ env.LC_APPLICATION_ID }}
                    scan-targets: 'go.list'
                    stage: build

    generate:
        name: Ensure Docs are Generated
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              
            - uses: actions/setup-go@v5
              with:
                  go-version-file: 'go.mod'
                  cache: true

            - uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.4.5
                terraform_wrapper: false
            
            - name: Generate Docs
              run: go generate ./...
              working-directory: tools

            - name: Check fo Documentation Diffs
              run: |
                  git diff --compact-summary --exit-code || \
                    (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' in `tools` directory command and commit."; exit 1)

    # Run acceptance tests in a matrix with Terraform CLI versions
    test-parallel:
        name: Terraform Provider Acceptance Tests
        needs: 
            - build
            - sonatype
            - generate
        runs-on: ubuntu-latest
        timeout-minutes: 15
        strategy:
            fail-fast: false
            matrix:
                # list whatever Terraform versions here you would like to support
                terraform:
                    - '1.0.*'
                    - '1.1.*'
                    - '1.2.*'
                    - '1.3.*'
                    - '1.4.*'
                    - '1.5.*'
                    - '1.6.*'
                    - '1.7.*'
                    - '1.8.*'
                    - '1.9.*'
                    - '1.10.*'
                    - '1.11.*'
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-go@v5
              with:
                  go-version-file: 'go.mod'
                  cache: true
            - uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: ${{ matrix.terraform }}
                  terraform_wrapper: false
            - run: go mod download
            - env:
                  NXRM_SERVER_URL: ${{ secrets.NXRM_SERVER_URL }}
                  NXRM_SERVER_USERNAME: ${{ secrets.NXRM_SERVER_USERNAME }}
                  NXRM_SERVER_PASSWORD: ${{ secrets.NXRM_SERVER_PASSWORD }}
                  TF_ACC: '1'
              run: go test -v -cover ./...
              timeout-minutes: 10

    test-single-hit:
        name: Terraform Provider Acceptance Tests (Single Hit)
        needs: 
            - build
            - sonatype
            - generate
        runs-on: ubuntu-latest
        timeout-minutes: 15
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-go@v5
              with:
                  go-version-file: 'go.mod'
                  cache: true
            - uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: 1.12.*
                  terraform_wrapper: false
            - run: go mod download
            - env:
                  NXRM_SERVER_URL: ${{ secrets.NXRM_SERVER_URL }}
                  NXRM_SERVER_USERNAME: ${{ secrets.NXRM_SERVER_USERNAME }}
                  NXRM_SERVER_PASSWORD: ${{ secrets.NXRM_SERVER_PASSWORD }}
                  TF_ACC: '1'
                  TF_ACC_SINGLE_HIT: '1'
              run: go test -v -cover ./...
              timeout-minutes: 10